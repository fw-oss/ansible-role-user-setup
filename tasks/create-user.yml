---
- name: Determine available groups
  ansible.builtin.getent:
    database: group

- name: Add 'docker' to user_groups if user is in docker_users
  ansible.builtin.set_fact:
    user_groups: "{{ item.groups + ['docker'] | unique }}"
  when:
    - "'docker' in ansible_facts.getent_group"
    - docker_users is defined and item.name in docker_users | list or item.name == ansible_ssh_user

- name: Create user {{ item.name }}
  ansible.builtin.user:
    name: "{{ item.name }}"
    comment: "{{ item.comment }}"
    groups: "{{ user_groups }}"
    state: present
    shell: /bin/bash
    password: "{{ item.password | password_hash('sha512', item.password_salt) }}"

- name: Add user to sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/{{ item.name }}
    line: "{{ item.name }} ALL=(ALL:ALL) NOPASSWD: ALL"
    state: present
    mode: "0440"
    create: true
    validate: "visudo -cf %s"
  when: item.sudo | bool

- name: Passwordless sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    line: "{{ item.name }} ALL=(ALL:ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"

- name: Set up authorized keys for "{{ item.name }}"
  ansible.posix.authorized_key:
    user: "{{ item.name }}"
    key: "{{ item.ssh_authorized_keys | join('\n') }}"
    exclusive: true
